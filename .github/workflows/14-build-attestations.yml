name: Demo 14 - Build Attestations

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      dotnet-version: '8.0'

    # if you use ANY permissions in yaml, you must include all permissions
    permissions:
      # for checkout
      contents: read
      # you must include thess permission to use the action/attest-build-provenance@v1 action
      id-token: write
      attestations: write


    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.dotnet-version }}

      - name: Restore dependencies
        run: dotnet restore src/MyClassLibrary/MyClassLibrary.csproj

      - name: Build 
        run: dotnet build --configuration Release src/MyClassLibrary/MyClassLibrary.csproj

      - name: Create staging directory
        run: mkdir -p ./staging
  
      - name: Copy DLL to staging directory
        run: cp ./src/MyClassLibrary/bin/Release/net${{env.dotnet-version}}/MyClassLibrary.dll ./staging/

      - name: Create artifact
        run: |
          cd staging
          tar -czf attestations.tar.gz ./*

      - name: Attest build provenance
        uses: actions/attest-build-provenance@v1
        with:
          # Specify the path to the folder you want to attest
          subject-path: staging/attestations.tar.gz

      - name: Upload attestations 
        uses: actions/upload-artifact@v4
        with:
          name: attestations
          path: staging/

  # Lets validate the attestation
  validate:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write
      attestations: write

    steps:
      - name: Create staging directory
        run: mkdir -p ./staging

      - name: Download the artifact
        uses: actions/download-artifact@v4
        with:
          name: attestations
          path: staging/
         
      - name: List files in staging directory 
        run: ls -al staging/

      - name: Validate Attestation
        id: validate
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        # FAIL CASE
        #run: gh attestation verify staging/attestations.tar.gz -R djredman99/gh-scripts
        # SUCCESS CASE
        run: gh attestation verify staging/attestations.tar.gz -R ${{ github.repository }}
        continue-on-error: true

      - name: Output Attestation
        if: steps.validate.outcome == 'success'
        run: echo "The attestation is VERIFIED" >> $GITHUB_STEP_SUMMARY

      - name: Output Attestation FAILED
        if: steps.validate.outcome == 'failure'
        run: echo "The attestation is NOT VERIFIED" >> $GITHUB_STEP_SUMMARY
